#!/usr/bin/bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# Startup
if hc silent new_attr bool my_not_first_autostart; then
    xsetroot -solid '#5A8E3A'
    ~/.fehbg &
    pulseaudio -D &
    emacs --daemon &
    syncthing &
    xmodmap ~/.Xmodmap
    picom -b
    /usr/lib/kdeconnectd &
    /usr/bin/kdeconnect-indicator &
    redshift-gtk &
    nm-applet &
    gnome-keyring-daemon --start
    nextcloud &
    /usr/share/doc/herbstluftwm/examples/exec_on_tag.sh 10 keepassxc &
    dunst &
fi

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q   quit
hc keybind $Mod-Shift-r   reload
hc keybind $Mod-w         close

# programms
hc keybind $Mod-s           spawn rofi -show run
hc keybind $Mod-Return      spawn es
hc keybind $Mod-t           spawn alacritty
hc keybind $Mod-b           spawn brave
hc keybind $Mod-v           spawn pavucontrol-qt
hc keybind $Mod-Control-b   spawn firefox-developer-edition
hc keybind $Mod-Control-t   spawn es -e '(eshell)'
hc keybind $Mod-Control-m   spawn es -e '(mu4e)'
hc keybind $Mod-Control-e   spawn es -e '(elfeed)'

# audio, brightness, and screenshots
hc keybind XF86AudioLowerVolume    spawn amixer set Master 5%- unmute
hc keybind XF86AudioRaiseVolume    spawn amixer set Master 5%+ unmute
hc keybind XF86AudioMute           spawn amixer set Master togglemute
hc keybind XF86AudioMicMute        spawn amixer set Capture togglemute
hc keybind XF86MonBrightnessDown   spawn xbacklight -5
hc keybind XF86MonBrightnessUp     spawn xbacklight +5
hc keybind Print                   spawn scrot ~/Pictures/screenshots/

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u         split   bottom  0.5
hc keybind $Mod-Shift-u   split   bottom  0.7
hc keybind $Mod-o         split   right   0.5
hc keybind $Mod-Shift-o   split   right   0.7
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# tags
tag_names=( {1..10} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p use_previous
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#d65d0e'
hc set frame_border_normal_color '#928374'
hc set frame_bg_normal_color '#928374'
hc set frame_bg_active_color '#d65d0e'
hc set frame_border_width 1
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width 1
hc set frame_gap 10

hc attr theme.active.color '#d65d0e'
hc attr theme.normal.color '#928374'
hc attr theme.urgent.color orange
hc attr theme.inner_width 2
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#d65d0e'
hc attr theme.active.outer_color '#d65d0e'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
hc set_monitors 2560x1418+0+22 1920x1080+2560+0
# or simply:
# hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
